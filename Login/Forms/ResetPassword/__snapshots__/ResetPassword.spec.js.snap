exports[`Reset Password Form can render correctly 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <View
    style={undefined}>
    <Button
        onPress={undefined}
        style={undefined}
        text="⬅"
        textStyle={undefined} />
    <View
        style={undefined}>
        <Input
            label="Email"
            onChangeText={[Function]}
            placeholderTextColor={undefined}
            style={undefined}
            wrapperStyle={undefined} />
    </View>
    <Button
        onPress={[Function]}
        style={
            Array [
                undefined,
                undefined,
              ]
        }
        text="Send"
        textStyle={
            Array [
                undefined,
                undefined,
              ]
        } />
</View>,
  "nodes": Array [
    <View
      style={undefined}>
      <Button
            onPress={undefined}
            style={undefined}
            text="⬅"
            textStyle={undefined} />
      <View
            style={undefined}>
            <Input
                  label="Email"
                  onChangeText={[Function]}
                  placeholderTextColor={undefined}
                  style={undefined}
                  wrapperStyle={undefined} />
      </View>
      <Button
            onPress={[Function]}
            style={
                  Array [
                        undefined,
                        undefined,
                      ]
            }
            text="Send"
            textStyle={
                  Array [
                        undefined,
                        undefined,
                      ]
            } />
</View>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 0,
      "_context": Object {},
      "_currentElement": <ResetPassword
        labels={
                Object {
                        "forgotPassword": "Forgot password",
                        "forgotPasswordFormButton": "Send",
                        "loginFormButton": "Login",
                        "password": "Password",
                        "rememberMe": "Remember Me",
                        "userIdentification": "Email",
                      }
        } />,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": ResetPassword {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "handleInputChange": [Function],
        "props": Object {
          "labels": Object {
            "forgotPassword": "Forgot password",
            "forgotPasswordFormButton": "Send",
            "loginFormButton": "Login",
            "password": "Password",
            "rememberMe": "Remember Me",
            "userIdentification": "Email",
          },
        },
        "refs": Object {},
        "renderLogo": [Function],
        "resetPassword": [Function],
        "state": Object {
          "password": "",
          "userIdentification": "",
        },
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <View
          style={undefined}>
          <Button
                    onPress={undefined}
                    style={undefined}
                    text="⬅"
                    textStyle={undefined} />
          <View
                    style={undefined}>
                    <Input
                              label="Email"
                              onChangeText={[Function]}
                              placeholderTextColor={undefined}
                              style={undefined}
                              wrapperStyle={undefined} />
          </View>
          <Button
                    onPress={[Function]}
                    style={
                              Array [
                                        undefined,
                                        undefined,
                                      ]
                    }
                    text="Send"
                    textStyle={
                              Array [
                                        undefined,
                                        undefined,
                                      ]
                    } />
</View>,
        "_renderedOutput": <View
          style={undefined}>
          <Button
                    onPress={undefined}
                    style={undefined}
                    text="⬅"
                    textStyle={undefined} />
          <View
                    style={undefined}>
                    <Input
                              label="Email"
                              onChangeText={[Function]}
                              placeholderTextColor={undefined}
                              style={undefined}
                              wrapperStyle={undefined} />
          </View>
          <Button
                    onPress={[Function]}
                    style={
                              Array [
                                        undefined,
                                        undefined,
                                      ]
                    }
                    text="Send"
                    textStyle={
                              Array [
                                        undefined,
                                        undefined,
                                      ]
                    } />
</View>,
      },
      "_renderedNodeType": 1,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <ResetPassword
    labels={
        Object {
            "forgotPassword": "Forgot password",
            "forgotPasswordFormButton": "Send",
            "loginFormButton": "Login",
            "password": "Password",
            "rememberMe": "Remember Me",
            "userIdentification": "Email",
          }
    } />,
}
`;
